<?php

/* @var $this yii\web\View */

use yii\helpers\Html;

$this->title = 'Мелкие лайфхаки';
$this->params['breadcrumbs'][] = ['label' => 'Мои статьи', 'url' => ['site/posts']];
$this->params['breadcrumbs'][] = ['label' => $this->title, 'url' => ''];
?>

<div class="site-about">
    <h2><?= Html::encode($this->title) ?></h2>

    <p class="my-article">
        Тут я собираюсь писать мелкие заметки, в первую очередь для себя, но, возможно, кому то пригодится
    </p>

    <p class="my-article">
    Передача параметра через post<br>
    Бывает так что например есть адрес перехода <code>URL = site/action?id=100</code> пусть такой пример.
    Таким образом, пользователь может подставить в адресной строке другой ID и попасть куда нибудь туда, где ему нечего делать.
    Но выход есть!<br>
    Пишем <code>
            Html::a('Наша ссылка', '/site/action', [
                'title' => 'Подробная информация',
                'class'=>'btn btn-primary btn-xs',
                'data-method' => 'post',
                'data-params' => [
                    'id' => $model->id,
                ],
            ]);
        </code><br>
    Вуаля! А теперь в контроллере встречаем <code>$request = Yii::$app->request; $id = $request->post('id')</code><br>
    Вот так мы скрыли параметр от пользователя.
    </p>

    <p class="my-article">
        Хозяйке на заметку<br>
        Не происходит автоматического делегирования <bold>прослушивателей</bold> для динамически добавленных элементов.<br>
        С таким поведением я столкнулся когда создавал несколько форм, подгружаемых через AJAX. В этих формах не работали
        JS виджеты.<br>
        Вариант решения - устанвливать прослушиватели (обрабтчики JS событий) на родительские элементы, например, на сам документ.
        Тогда при создании дочерних элементов все отрабатывает корректно.
    </p>

</div>
